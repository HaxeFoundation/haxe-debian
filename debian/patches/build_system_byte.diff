Description: Some Debian archs don't have ocamlopt so bytecompile everything.
Author: Barry deFreese <bdefreese@debian.org>
Index: haxe-3.0.0~svn6707/Makefile
===================================================================
--- haxe-3.0.0~svn6707.orig/Makefile	2013-07-18 12:39:57.000000000 -0400
+++ haxe-3.0.0~svn6707/Makefile	2013-07-23 11:09:10.183366913 -0400
@@ -8,23 +8,23 @@
 #  - use 'make -f Makefile.win' to build for Windows
 #  - use 'make MSVC=1 -f Makefile.win' to build for Windows with OCaml/MSVC
 #
-.SUFFIXES : .ml .mli .cmo .cmi .cmx .mll .mly
+.SUFFIXES : .ml .mli .cmo .cmi .cmo .mll .mly
 
 INSTALL_DIR=/usr
 
 OUTPUT=haxe
 EXTENSION=
-OCAMLOPT=ocamlopt
+OCAMLOPT=ocamlc
 
 CFLAGS= -g -I libs/extlib -I libs/extc -I libs/neko -I libs/javalib -I libs/ziplib -I libs/swflib -I libs/xml-light -I libs/ttflib
 
 CC_CMD = $(OCAMLOPT) $(CFLAGS) -c $<
 CC_PARSER_CMD = $(OCAMLOPT) -pp camlp4o $(CFLAGS) -c parser.ml
 
-LIBS=unix.cmxa str.cmxa libs/extlib/extLib.cmxa libs/xml-light/xml-light.cmxa libs/swflib/swflib.cmxa \
-	libs/extc/extc.cmxa libs/neko/neko.cmxa libs/javalib/java.cmxa libs/ziplib/zip.cmxa libs/ttflib/ttf.cmxa
+LIBS=unix.cma str.cma libs/extlib/extLib.cma libs/xml-light/xml-light.cma libs/swflib/swflib.cma \
+	-I ${CURDIR}/libs/extc libs/extc/extc.cma -I ${CURDIR}/libs/neko libs/neko/neko.cma libs/javalib/java.cma libs/ziplib/zip.cma libs/ttflib/ttf.cma
 
-NATIVE_LIBS=-cclib libs/extc/extc_stubs.o -cclib -lz
+NATIVE_LIBS=-cclib ${CURDIR}/libs/extc/extc_stubs.o -cclib -lz -ccopt -L${CURDIR}
 
 RELDIR=../../..
 
@@ -39,17 +39,17 @@
 all: libs haxe
 
 libs:
-	make -C libs/extlib opt
-	make -C libs/extc native
-	make -C libs/neko
-	make -C libs/javalib
-	make -C libs/ziplib
-	make -C libs/swflib
-	make -C libs/xml-light xml-light.cmxa
-	make -C libs/ttflib
+	make -C libs/extlib bytecode
+	make -C libs/extc bytecode
+	make -C libs/neko bytecode
+	make -C libs/javalib bytecode
+	make -C libs/ziplib bytecode
+	make -C libs/swflib bytecode
+	make -C libs/xml-light bytecode
+	make -C libs/ttflib bytecode
 
-haxe: $(MODULES:=.cmx)
-	$(OCAMLOPT) -o $(OUTPUT) $(NATIVE_LIBS) $(LIBS) $(MODULES:=.cmx)
+haxe: $(MODULES:=.cmo)
+	$(OCAMLOPT) -custom -o $(OUTPUT) $(NATIVE_LIBS) $(LIBS) $(MODULES:=.cmo)
 
 haxelib:
 	$(CURDIR)/$(OUTPUT) --cwd "$(CURDIR)/std/tools/haxelib" haxelib.hxml
@@ -86,58 +86,58 @@
 	cp haxe*.exe doc/CHANGES.txt $(EXPORT)
 	rsync -a --exclude .svn --exclude *.n --exclude std/libs --delete std $(EXPORT)
 
-codegen.cmx: optimizer.cmx typeload.cmx typecore.cmx type.cmx genxml.cmx common.cmx ast.cmx
+codegen.cmo: optimizer.cmo typeload.cmo typecore.cmo type.cmo genxml.cmo common.cmo ast.cmo
 
-common.cmx: type.cmx ast.cmx
+common.cmo: type.cmo ast.cmo
 
-dce.cmx: ast.cmx common.cmx type.cmx
+dce.cmo: ast.cmo common.cmo type.cmo
 
-genas3.cmx: type.cmx common.cmx codegen.cmx ast.cmx
+genas3.cmo: type.cmo common.cmo codegen.cmo ast.cmo
 
-gencommon.cmx: type.cmx common.cmx codegen.cmx ast.cmx
+gencommon.cmo: type.cmo common.cmo codegen.cmo ast.cmo
 
-gencpp.cmx: type.cmx lexer.cmx common.cmx codegen.cmx ast.cmx
+gencpp.cmo: type.cmo lexer.cmo common.cmo codegen.cmo ast.cmo
 
-gencs.cmx: type.cmx lexer.cmx gencommon.cmx common.cmx codegen.cmx ast.cmx
+gencs.cmo: type.cmo lexer.cmo gencommon.cmo common.cmo codegen.cmo ast.cmo
 
-genjava.cmx: type.cmx gencommon.cmx common.cmx codegen.cmx ast.cmx
+genjava.cmo: type.cmo gencommon.cmo common.cmo codegen.cmo ast.cmo
 
-genjs.cmx: type.cmx optimizer.cmx lexer.cmx common.cmx codegen.cmx ast.cmx
+genjs.cmo: type.cmo optimizer.cmo lexer.cmo common.cmo codegen.cmo ast.cmo
 
-genneko.cmx: type.cmx lexer.cmx common.cmx codegen.cmx ast.cmx
+genneko.cmo: type.cmo lexer.cmo common.cmo codegen.cmo ast.cmo
 
-genphp.cmx: type.cmx lexer.cmx common.cmx codegen.cmx ast.cmx
+genphp.cmo: type.cmo lexer.cmo common.cmo codegen.cmo ast.cmo
 
-genswf.cmx: type.cmx genswf9.cmx genswf8.cmx common.cmx ast.cmx
+genswf.cmo: type.cmo genswf9.cmo genswf8.cmo common.cmo ast.cmo
 
-genswf8.cmx: type.cmx lexer.cmx common.cmx codegen.cmx ast.cmx
+genswf8.cmo: type.cmo lexer.cmo common.cmo codegen.cmo ast.cmo
 
-genswf9.cmx: type.cmx lexer.cmx genswf8.cmx common.cmx codegen.cmx ast.cmx
+genswf9.cmo: type.cmo lexer.cmo genswf8.cmo common.cmo codegen.cmo ast.cmo
 
-genxml.cmx: type.cmx lexer.cmx common.cmx ast.cmx
+genxml.cmo: type.cmo lexer.cmo common.cmo ast.cmo
 
-interp.cmx: typecore.cmx type.cmx lexer.cmx genneko.cmx common.cmx codegen.cmx ast.cmx genswf.cmx parser.cmx
+interp.cmo: typecore.cmo type.cmo lexer.cmo genneko.cmo common.cmo codegen.cmo ast.cmo genswf.cmo parser.cmo
 
-matcher.cmx: optimizer.cmx codegen.cmx typecore.cmx type.cmx typer.cmx common.cmx ast.cmx
+matcher.cmo: optimizer.cmo codegen.cmo typecore.cmo type.cmo typer.cmo common.cmo ast.cmo
 
-main.cmx: dce.cmx matcher.cmx typer.cmx typeload.cmx typecore.cmx type.cmx parser.cmx optimizer.cmx lexer.cmx interp.cmx genxml.cmx genswf.cmx genphp.cmx genneko.cmx genjs.cmx gencpp.cmx genas3.cmx common.cmx codegen.cmx ast.cmx gencommon.cmx genjava.cmx gencs.cmx
+main.cmo: dce.cmo matcher.cmo typer.cmo typeload.cmo typecore.cmo type.cmo parser.cmo optimizer.cmo lexer.cmo interp.cmo genxml.cmo genswf.cmo genphp.cmo genneko.cmo genjs.cmo gencpp.cmo genas3.cmo common.cmo codegen.cmo ast.cmo gencommon.cmo genjava.cmo gencs.cmo
 
-optimizer.cmx: typecore.cmx type.cmx parser.cmx common.cmx ast.cmx
+optimizer.cmo: typecore.cmo type.cmo parser.cmo common.cmo ast.cmo
 
-parser.cmx: parser.ml lexer.cmx common.cmx ast.cmx
+parser.cmo: parser.ml lexer.cmo common.cmo ast.cmo
 	$(CC_PARSER_CMD)
 
-type.cmx: ast.cmx
+type.cmo: ast.cmo
 
-typecore.cmx: type.cmx common.cmx ast.cmx
+typecore.cmo: type.cmo common.cmo ast.cmo
 
-typeload.cmx: typecore.cmx type.cmx parser.cmx optimizer.cmx lexer.cmx common.cmx ast.cmx
+typeload.cmo: typecore.cmo type.cmo parser.cmo optimizer.cmo lexer.cmo common.cmo ast.cmo
 
-typer.cmx: typeload.cmx typecore.cmx type.cmx parser.cmx optimizer.cmx lexer.cmx interp.cmx genneko.cmx genjs.cmx common.cmx codegen.cmx ast.cmx
+typer.cmo: typeload.cmo typecore.cmo type.cmo parser.cmo optimizer.cmo lexer.cmo interp.cmo genneko.cmo genjs.cmo common.cmo codegen.cmo ast.cmo
 
-lexer.cmx: lexer.ml
+lexer.cmo: lexer.ml
 
-lexer.cmx: ast.cmx
+lexer.cmo: ast.cmo
 
 
 clean: clean_libs clean_haxe clean_tools
@@ -153,13 +153,13 @@
 	make -C libs/ttflib clean
 
 clean_haxe:
-	rm -f $(MODULES:=.obj) $(MODULES:=.o) $(MODULES:=.cmx) $(MODULES:=.cmi) lexer.ml
+	rm -f $(MODULES:=.obj) $(MODULES:=.o) $(MODULES:=.cmo) $(MODULES:=.cmi) lexer.ml
 
 clean_tools:
 	rm -f $(OUTPUT) haxelib haxedoc
 
 # SUFFIXES
-.ml.cmx:
+.ml.cmo:
 	$(CC_CMD)
 
 .mli.cmi:
Index: haxe-3.0.0~svn6707/libs/extlib/Makefile
===================================================================
--- haxe-3.0.0~svn6707.orig/libs/extlib/Makefile	2013-07-18 12:40:00.000000000 -0400
+++ haxe-3.0.0~svn6707/libs/extlib/Makefile	2013-07-23 11:10:52.795875741 -0400
@@ -9,10 +9,16 @@
 MLI = $(MODULES:=.mli)
 SRC = $(MLI) $(MODULES:=.ml) extLib.ml
 
-all:
+all: bytecode native
+
+opt: native
+
+bytecode:
 	ocamlc -a -o extLib.cma $(SRC)
-opt:
+
+native:
 	ocamlopt -g -a -o extLib.cmxa $(SRC)
+
 doc:
 	ocamlc -c $(MODULES:=.mli)
 	mkdir -p doc/
Index: haxe-3.0.0~svn6707/libs/javalib/Makefile
===================================================================
--- haxe-3.0.0~svn6707.orig/libs/javalib/Makefile	2013-07-18 12:40:00.000000000 -0400
+++ haxe-3.0.0~svn6707/libs/javalib/Makefile	2013-07-23 11:11:27.576048206 -0400
@@ -1,5 +1,10 @@
-all:
+all: bytecode native
+
+native:
 	ocamlopt -g -I ../extlib -a -o java.cmxa jData.ml jReader.ml
+
+bytecode:
+	ocamlc -g -I ../extlib -a -o java.cma jData.ml jReader.ml
 	
 clean:
 	rm -rf java.cmxa java.lib java.a $(wildcard *.cmx) $(wildcard *.obj) $(wildcard *.o) $(wildcard *.cmi)
Index: haxe-3.0.0~svn6707/libs/neko/Makefile
===================================================================
--- haxe-3.0.0~svn6707.orig/libs/neko/Makefile	2013-07-18 12:40:00.000000000 -0400
+++ haxe-3.0.0~svn6707/libs/neko/Makefile	2013-07-23 11:12:52.392468788 -0400
@@ -1,5 +1,10 @@
-all:
+all: bytecode native
+
+native:
 	ocamlopt -I ../extlib -a -o neko.cmxa nast.ml nxml.ml binast.ml nbytecode.ml ncompile.ml
 
+bytecode:
+	ocamlc -I ../extlib -a -o neko.cma nast.ml nxml.ml binast.ml nbytecode.ml ncompile.ml
+
 clean:
-	rm -rf neko.cmxa neko.lib neko.a $(wilcard *.cmx) $(wildcard *.obj) $(wildcard *.o) $(wildcard *.cmi)
\ No newline at end of file
+	rm -rf neko.cmxa neko.lib neko.a $(wilcard *.cmx) $(wildcard *.obj) $(wildcard *.o) $(wildcard *.cmi)
Index: haxe-3.0.0~svn6707/libs/swflib/Makefile
===================================================================
--- haxe-3.0.0~svn6707.orig/libs/swflib/Makefile	2013-07-18 12:39:59.000000000 -0400
+++ haxe-3.0.0~svn6707/libs/swflib/Makefile	2013-07-23 11:13:47.400741560 -0400
@@ -4,29 +4,47 @@
 
 CFLAGS= -I ../extlib -I ../extc -g
 LIBS=
-LFLAGS= -o swflib.cmxa -a
 
 MODULES=as3code.cmx png.cmx swf.cmx actionScript.cmx as3parse.cmx swfPic.cmx as3hlparse.cmx swfParser.cmx
 
-all: swflib.cmxa
+all: native bytecode
+
+native: swflib.cmxa
+
+bytecode: swflib.cma
 
 swflib.cmxa: $(MODULES)
-	ocamlopt $(LFLAGS) $(LIBS) $(MODULES)
+	ocamlopt -o swflib.cmxa $(LIBS) $(MODULES)
+
+swflib.cma: $(MODULES:.cmx=.cmo)
+	ocamlc -o swflib.cma -a $(LFLAGS) $(LIBS) $(MODULES:.cmx=.cmo)
 
 actionScript.cmx: swf.cmx
 
+as3code.cmo: as3.cmi
+
 as3code.cmx: as3.cmi
 
 as3hl.cmi: as3.cmi
 
+as3hlparse.cmo: as3parse.cmo as3hl.cmi as3code.cmo as3.cmi
+
 as3hlparse.cmx: as3parse.cmx as3hl.cmi as3code.cmx as3.cmi
 
+as3parse.cmo: as3code.cmo as3.cmi
+
 as3parse.cmx: as3code.cmx as3.cmi
 
+png.cmo: png.cmi
+
 png.cmx: png.cmi
 
+swf.cmo: as3.cmi
+
 swf.cmx: as3.cmi
 
+swfParser.cmo: swf.cmo as3parse.cmo actionScript.cmo
+
 swfParser.cmx: swf.cmx as3parse.cmx actionScript.cmx
 
 swfPic.cmx: swf.cmx png.cmi
@@ -50,4 +68,3 @@
 
 .mly.ml:
 	ocamlyacc $<
-
Index: haxe-3.0.0~svn6707/libs/xml-light/Makefile
===================================================================
--- haxe-3.0.0~svn6707.orig/libs/xml-light/Makefile	2013-07-18 12:39:59.000000000 -0400
+++ haxe-3.0.0~svn6707/libs/xml-light/Makefile	2013-07-23 11:15:23.293217065 -0400
@@ -7,9 +7,13 @@
 LFLAGS= -a
 LIBS=
 
-all: xml-light.cma test.exe doc
+all: bytecode test.exe doc
 
-opt: xml-light.cmxa test_opt.exe
+opt: native
+
+native: xml-light.cmxa
+
+bytecode: xml-light.cma
 
 installcommon: all
 	cp xml.mli xmlParser.mli dtd.mli xml.cmi xmlParser.cmi dtd.cmi $(INSTALLDIR)
Index: haxe-3.0.0~svn6707/libs/ziplib/Makefile
===================================================================
--- haxe-3.0.0~svn6707.orig/libs/ziplib/Makefile	2013-07-18 12:40:00.000000000 -0400
+++ haxe-3.0.0~svn6707/libs/ziplib/Makefile	2013-07-23 11:16:19.233494458 -0400
@@ -1,5 +1,10 @@
-all:
+all: native bytecode
+
+native:
 	ocamlopt -g -I ../extlib -I ../extc -a -o zip.cmxa zlib.mli zlib.ml zip.mli zip.ml
+
+bytecode:
+	ocamlc -g -I ../extlib -I ../extc -a -o zip.cma zlib.mli zlib.ml zip.mli zip.ml
 	
 clean:
-	rm -rf zip.cmxa zip.lib zip.a $(wildcard *.cmx) $(wildcard *.obj) $(wildcard *.o) $(wildcard *.cmi)
\ No newline at end of file
+	rm -rf zip.cmxa zip.lib zip.a $(wildcard *.cmx) $(wildcard *.obj) $(wildcard *.o) $(wildcard *.cmi)
